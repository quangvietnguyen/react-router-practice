{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/16-react-router-practice/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllQuote, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuote;\nexport default AllQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/16-react-router-practice/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","NoQuotesFound","AllQuote","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDV,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAAA;;AAED,MAAIG,KAAJ,EAAW;AACP,wBACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAAA;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAJ,EAA2E;AACvE,wBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACD,sBACI,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA5BD;;GAAMJ,Q;UACuDL,O;;;KADvDK,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst AllQuote = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest])\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        )\n    };\n\n    if (error) {\n        return (\n            <p className='centered focused'>{error}</p>\n        )\n    };\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n        return (\n            <NoQuotesFound/>\n        )\n    }\n    return (\n        <QuoteList quotes={loadedQuotes}/>\n    )\n};\nexport default AllQuote;"]},"metadata":{},"sourceType":"module"}