{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/16-react-router-practice/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest.sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && !loadedComments && loadedComments.length === 0) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centerd\",\n      children: \"No comments were added.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HrsqoF+cz5x+W3JvLxHQ6yWqDAQ=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/16-react-router-practice/src/components/comments/Comments.js"],"names":["useCallback","useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcD,MAApB;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,MAAiDZ,OAAO,CAACC,cAAD,CAA9D;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEP,CAACC,WAAW,CAACA,WAAb,CAFO,CAAT;;AAGA,QAAMI,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMQ,mBAAmB,GAAGpB,WAAW,CAAC,MAAM;AAC5Ce,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFsC,EAErC,CAACC,WAAD,EAAcD,OAAd,CAFqC,CAAvC;AAIA,MAAIO,QAAJ;;AAEA,MAAIL,MAAM,KAAK,SAAf,EAA0B;AACxBK,IAAAA,QAAQ,gBAAG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MAAIL,MAAM,KAAK,WAAX,IAA2BE,cAAc,IAAIA,cAAc,CAACI,MAAf,GAAwB,CAAzE,EAA6E;AAC3ED,IAAAA,QAAQ,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MAAIF,MAAM,KAAK,WAAX,IAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAA5E,EAAgF;AAC9ED,IAAAA,QAAQ,gBAAG;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACiB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEG,OAAzB;AAAkC,MAAA,cAAc,EAAEM;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPtB,EAQGC,QARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1CD;;GAAMX,Q;UAEWP,S,EAEwCG,O;;;KAJnDI,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments }  = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  },[sendRequest.sendRequest])\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className='centered'><LoadingSpinner/></div>\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n  \n  if (status === 'completed' && (!loadedComments && loadedComments.length === 0)) {\n    comments = <p className='centerd'>No comments were added.</p>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}