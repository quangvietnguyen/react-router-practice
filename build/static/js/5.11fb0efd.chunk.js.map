{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCuCSC,EApCG,SAACR,GACjB,IAAMS,EAAUC,cACVC,EAAWC,cACjBC,QAAQC,IAAIH,GACZ,IAdkBI,EAAQC,EAepBC,EAAiD,QADnC,IAAIC,gBAAgBP,EAASQ,QACVC,IAAI,QACrCC,GAhBYN,EAgBcf,EAAMe,OAhBZC,EAgBoBC,EAfvCF,EAAOO,MAAK,SAACC,EAAQC,GAC1B,OAAIR,EACKO,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE7BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,MAsBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQuB,QAAxB,SACE,yBAAQC,QAbe,WAC3BjB,EAAQkB,KAAK,CACXC,SAAUjB,EAASiB,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAU9C,kBAA8CA,EAAqB,aAAe,iBAEpF,oBAAIhB,UAAWC,IAAQ2B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVF,OAAQ0B,EAAM1B,OACdD,KAAM2B,EAAM3B,MAHP2B,EAAMxB,a,yCC1BRyB,EAXO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMhC,UAAU,MAAMK,GAAG,aAAzB,6BC6BS4B,UA7BE,WACb,MAAyDC,YAAQC,KAAc,GAAxEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAoBC,EAAhD,EAAgDA,MAKhD,OAJAC,qBAAU,WACNL,MACD,CAACA,IAEW,YAAXC,EAEI,qBAAKrC,UAAU,WAAf,SACI,cAAC0C,EAAA,EAAD,MAKRF,EAEI,mBAAGxC,UAAU,mBAAb,SAAiCwC,IAI1B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAMzD,cAAC,EAAD,CAAW7B,OAAQwB,IAJf,cAAC,EAAD","file":"static/js/5.11fb0efd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}` // search key is where we can put the query\n    })\n    // OR\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler} >Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst AllQuote = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest])\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        )\n    };\n\n    if (error) {\n        return (\n            <p className='centered focused'>{error}</p>\n        )\n    };\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n        return (\n            <NoQuotesFound/>\n        )\n    }\n    return (\n        <QuoteList quotes={loadedQuotes}/>\n    )\n};\nexport default AllQuote;"],"sourceRoot":""}